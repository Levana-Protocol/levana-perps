[package]
name = "perps-exes"
description = "Helper executables for testing, deploying, and running bots"
version = "0.1.0"
edition = "2021"

[dependencies]
anyhow = "1.0.93"
perpswap = { path = "../perpswap", package = "levana_perpswap_cosmos", features = [
	"bridge", "chrono"
] }
serde_yaml = "0.9.2"
cosmwasm-schema = { workspace = true }
serde = { version = "1.0.214", features = ["derive"] }
serde_json = "1.0.132"
cosmos = { workspace = true }
cosmwasm-std = { workspace = true }
pyth-sdk-cw = { workspace = true }
tokio = { version = "1.41.1", default-features = false, features = [
	"time",
	"rt",
	"rt-multi-thread",
	"macros",
	"process",
	"tracing",
] }
once_cell = "1"
multi_test = { package = "levana_perpswap_multi_test", path = "../multi_test", default-features = false }
clap = { version = "4.5.20", features = ["derive", "env"] }
fs-err = "3.0.0"
dotenvy = "0.15.7"
hex = "0.4"
sha2 = "0.10.8"
reqwest = { version = "0.12.9", default-features = false, features = [
	"rustls-tls",
	"json",
	"gzip",
	"brotli"
] }
chrono = { version = "0.4.38", features = ["serde"] }
axum = { version = "0.7.7", features = [ "tracing", "macros"] }
axum-extra = { version = "0.9.4", features = ["typed-routing", "typed-header"] }
tower-http = { version = "0.6.1", features = ["cors", "auth", "timeout", "limit", "trace"] }
futures = "0.3.31"
tokio-tungstenite = "0.24.0"
tokio-util = { version = "0.7.12", features = ["full"] }
cw-multi-test = "2.2.0"
rand = "0.8"
csv = "1.3.0"
tonic = "0.12.3"
askama = "0.12.1"
cw-utils = "2.0.0"
thiserror = "2.0.0"
resvg = "0.44.0"
axum-macros = "0.4.2"
mime = "0.3.17"
sqlx = { version = "0.8.2", features = [
	"runtime-tokio-rustls",
	"postgres",
] }
itertools = "0.13.0"
sentry = { version = "0.34.0", default-features = false, features = [ # Newer sentry require rustc 1.66+
	"reqwest",
	"rustls",
	"tracing",
] }
sentry-tracing = "0.34.0"
async-channel = "2.3.1"
pid1 = "0.1.1"
dashmap = "6.1.0"
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
parking_lot = { version = "0.12.3", features = ["deadlock_detection"] }
bigdecimal = { version = "0.4.6", features = ["serde"]}
http = "1.1.0"
headers = "0.4.0"
tower = "0.5.1"
figment = { version = "0.10.19", features = ["env", "yaml", "toml"] }
toml = "0.8.19"
backon = "1.2.0"
comfy-table = "7.1.1"

[features]
default = []
sanity = ["multi_test/sanity"]
