export DATABASE_URL := "postgresql://postgres:postgres@localhost/companion"

# List all recipies
default:
	just --list --unsorted

# Run postgres via docker
postgres:
    docker run --name price_api_pg --net=host --rm -it -e POSTGRES_PASSWORD=postgres -p 5432:5432 postgres:15.3-alpine -c log_statement=all

# psql to docker
psql:
    psql -U postgres -h localhost -d companion

# Shutdown postgres
postgres-down:
    docker container stop price_api_pg

# Database reset
db-reset:
	sqlx database reset -y

# Run application
run:
	cargo run --bin perps-companion uri --postgres-uri postgresql://postgres:postgres@localhost/companion

# Postgres terminate connection
pg-terminate-conn:
	psql -U postgres -h localhost -c "SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = 'companion' AND pid <> pg_backend_pid();"

# Test by posting data
post-test:
	curl --verbose --header "Accept: application/json" --header "Content-Type: application/json" --request POST --data '{"address":"sei1g9p9e90m67crr08s4vta48pjk68ldpru9h6x7s8fj3satze4447spcmfkj","chain":"atlantic-2","position_id":"1","pnl_type":"usd"}' http://localhost:3000/pnl-url

# Test by fetching html of above post
get-test:
	curl --verbose http://localhost:3000/pnl/1000

# Run image
run-remote-image:
	docker run --name comp --net=host -p 3000:3000 --rm -it ghcr.io/levana-protocol/levana-perps/companion:023e218903f69b079bbb8812ab18c4da732c410e --app-environment test --app-version test perps-companion uri -- --postgres-uri postgresql://postgres:postgres@localhost/companion
