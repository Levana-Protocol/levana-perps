name: Test

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10

jobs:
  rust_tests:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-test-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: just@1.25.2,nextest@0.9.82
      - uses: dorny/paths-filter@v3
        id: contracts
        with:
          filters: |
            contracts:
              - 'contracts/**'
              - 'packages/perpswap/**'
              - 'packages/multi_test/**'
              - 'packages/fuzz/**'
              - '.ci/**'
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.75.0
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
      - name: Cache contract builds
        if: ${{ (steps.contracts.outputs.contracts == 'true' || github.ref == 'refs/heads/main') }}
        uses: actions/cache@v4
        with:
          key: contracts-${{ hashFiles('Cargo.toml') }}-${{hashFiles('Cargo.lock')}}-new${{ hashFiles('./.ci/osmolocal.Dockerfile')}}-${{ hashFiles('./.ci/contracts.sh')}} }
          restore-keys: |
            contracts-${{ hashFiles('Cargo.toml') }}
            contracts
          path: |
            wasm
      - name: Compile
        run: just cargo-compile
      # - name: Run tests (with prop tests)
      #   if: github.ref == 'refs/heads/main'
      #   run: just cargo-test-with-prop
      - name: Run tests (without prop tests)
        # if: github.ref != 'refs/heads/main'
        run: just cargo-test-check
      - name: Clippy
        run: just cargo-clippy-check
      - name: Rustfmt
        run: just cargo-fmt-check
      - name: Cache docker images
        if: ${{ (steps.contracts.outputs.contracts == 'true' || github.ref == 'refs/heads/main') }}
        run: just cache-docker-images
      - name: Typescript check
        run: just typescript-check
      - name: Build contracts
        if: ${{ (steps.contracts.outputs.contracts == 'true' || github.ref == 'refs/heads/main') }}
        run: just build-contracts
      - name: Print contract sizes
        if: ${{ (steps.contracts.outputs.contracts == 'true' || github.ref == 'refs/heads/main') }}
        run: ls -l wasm/artifacts/*.wasm
      - name: On Chain tests (Rust)
        if: ${{ (steps.contracts.outputs.contracts == 'true' || github.ref == 'refs/heads/main') }}
        run: just contracts-test
      - name: Deploy to Osmosis testnet
        if: github.ref == 'refs/heads/main'
        run: COSMOS_WALLET="${{ secrets.DEPLOYER_PHRASE }}" just deploy-osmosis-testnet || echo "Ignoring failed deployment"
      - name: Migrate contracts (osmoci)
        if: github.ref == 'refs/heads/main'
        run: COSMOS_WALLET="${{ secrets.DEPLOYER_PHRASE }}" just migrate-osmoci || echo "Ignoring failed migration"
      - name: Build documentation
        if: github.ref == 'refs/heads/main'
        run: just build-docs
      - name: Deploy documentation
        if: github.ref == 'refs/heads/main'
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: a24f405dad2c41c98a0314f4bb6d5c6f
          projectName: levana-api-docs
          directory: .output/temp/doc
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
